generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}
 
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])

  @@index([userId], name: "userId")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId], name: "userId")
}
 
model User {
  id            String    @id @default(cuid())
  rollNumber    String   @unique
  name          String
  email         String   @unique
  password      String   // Added password field
  department    String
  emailVerified DateTime?
  image         String?
  quizzes         Quiz[]
  accounts      Account[]
  sessions      Session[]
}

model Faculty {
  id            String    @id @default(cuid())
  name          String
  email         String   @unique
  password      String   // Added password field
  phone         String
  department    String?
  designation   String?
}

enum QuizType {
  mcq
  open_ended
}

model Quiz {
  id            String    @id @default(cuid())
  userId        String
  timeStarted   DateTime
  topic        String
  timeEnded     DateTime?
  quizType    QuizType
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions    Question[]
  @@index([userId], name: "userId")
}

model Question {
  id            String    @id @default(cuid())
  question     String
  answer      String
  quizId      String
  quizName    String
  options      Json?
  quiz         Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  percentageCorrect Float?
  isCorrect Boolean?
  questionType QuizType
  userAnswer String?

  @@index([quizId])
}